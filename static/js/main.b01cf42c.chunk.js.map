{"version":3,"sources":["fonts/Shift-BoldItalic.otf","config/article-views.js","fonts/Shift-Bold.otf","fonts/BentonSansCond-Regular.otf","fonts/BentonSansCond-RegItalic.otf","fonts/BentonSansCond-Bold.otf","fonts/BentonSansCond-BoldItalic.otf","components/Map/Map.js","components/MapWrapper/MapWrapper.js","components/ArticleEntry/ArticleEntry.js","components/ArticleList/ArticleList.js","components/ScrollWrapper/ScrollWrapper.js","components/InputSlider/InputSlider.js","components/FilterButtons/FilterButtons.js","components/OverlayPanel/OverlayPanel.js","components/ScrollyMap/ScrollyMap.js","config/mapbox-config.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","center","window","innerWidth","views","sliderValue","activeButton","viewState","bearing","longitude","latitude","maxZoom","minZoom","pitch","transitionDuration","zoom","Map","Component","constructor","props","super","layers","hoverInfo","this","state","data","_viewChange","console","log","_renderLayers","forEach","d","push","ArcLayer","id","autoHighlight","getHeight","getSourcePosition","f","parseFloat","source_lon","source_lat","getTargetPosition","target_lon","target_lat","getSourceColor","color","getTargetColor","getWidth","pickable","onHover","info","object","setState","updateTriggers","renderTooltip","fontColor","x","y","candidate","React","createElement","className","style","cursor","position","zIndex","pointerEvents","left","top","Date","city","riding","party_incumbent","mov","render","DeckGL","controller","touchRotate","initialViewState","pickingRadius","StaticMap","mapboxApiAccessToken","accessToken","mapStyle","mapboxStyle","MapWrapper","articleView","transitionInterpolator","FlyToInterpolator","Fragment","ArticleEntry","h2","data-index","dangerouslySetInnerHTML","__html","text","ArticleList","articleEntries","map","i","key","step","ScrollWrapper","componentDidMount","scroller","Scrollama","setup","offset","onStepEnter","resp","updateGraphic","articleViews","onStepExit","togglePointerEvents","index","addEventListener","resize","container","document","getElementById","parseInt","length","classList","add","remove","stepValue","InputSlider","type","min","max","sliderMax","value","onChange","FilterButtons","onClick","OverlayPanel","dateString","date","month","getMonth","day","getDate","formatDate","currentDate","ScrollyMap","dates","allData","currentDateIndex","currentView","currentData","dataReady","timestamp","filterButton","bind","updateRouteData","Papa","parse","dataUrl","download","header","complete","results","handleData","e","target","currentTimestamp","updateButtonClasses","partyData","filter","getTimestamp","sorted","getTime","sort","a","b","Set","target_id","routes","querySelectorAll","valueAsNumber","App","ArticleEntries","ArticleViews","MapboxConfig","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b01cf42c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Shift-BoldItalic.5c3edbfd.otf\";","const center = window.innerWidth > 400 ? [49.28218,-123.296327] : [49.58218,-123.596327];\n\nconst views = [\n\t{\n\t\tsliderValue: 22,\n\t\tactiveButton: 'all',\n\t\tviewState: {\n\t\t\tbearing: -0,\n\t\t\tlongitude: center[1],\n\t\t\tlatitude: center[0],\n\t\t\tmaxZoom: 11,\n\t\t\tminZoom: 4.5,\n\t\t\tpitch: 60,\n\t\t\ttransitionDuration: 'auto',\n\t\t\tzoom: 7\n\t\t}\n\t},\n\t{\n\t\tsliderValue: 22,\n\t\tactiveButton: 'eby',\n\t\tviewState: {\n\t\t\tbearing: 0.72,\n\t\t\tlongitude: -123.0432730329727,\n\t\t\tlatitude: 49.1780540598552,\n\t\t\tmaxZoom: 11,\n\t\t\tminZoom: 4.5,\n\t\t\tpitch: 60,\n\t\t\ttransitionDuration: 'auto',\n\t\t\tzoom: 6\n\t\t}\n\t},\n\t{\n\t\tsliderValue: 22,\n\t\tactiveButton: 'rustad',\n\t\tviewState: {\n\t\t\tbearing: 0.72,\n\t\t\tlongitude: -122.5432730329727,\n\t\t\tlatitude: 49.1780540598552,\n\t\t\tmaxZoom: 11,\n\t\t\tminZoom: 4.5,\n\t\t\tpitch: 60,\n\t\t\ttransitionDuration: 'auto',\n\t\t\tzoom: 7\n\t\t}\n\t},\n\t{\n\t\tsliderValue: 21,\n\t\tactiveButton: 'furstenau',\n\t\tviewState: {\n\t\t\tbearing: 9.8,\n\t\t\tlongitude: -123.34955971734388,\n\t\t\tlatitude: 48.44066017223553,\n\t\t\tmaxZoom: 15,\n\t\t\tminZoom: 4.5,\n\t\t\tpitch: 50,\n\t\t\ttransitionDuration: 'auto',\n\t\t\tzoom: 12\n\t\t}\n\t},\n\t{\n\t\tsliderValue: 21,\n\t\tactiveButton: 'all',\n\t\tviewState: {\n\t\t\tbearing: -8.83,\n\t\t\tlongitude: -122.364565510473,\n\t\t\tlatitude: 49.217462355344296,\n\t\t\tmaxZoom: 11,\n\t\t\tminZoom: 4.5,\n\t\t\tpitch: 60,\n\t\t\ttransitionDuration: 'auto',\n\t\t\tzoom: 6\n\t\t}\n\t},\n]\n\nmodule.exports = views;","module.exports = __webpack_public_path__ + \"static/media/Shift-Bold.cdd38a86.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-Regular.43cd4ac7.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-RegItalic.69a4217c.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-Bold.6f6753fd.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-BoldItalic.a6640d89.otf\";","import React, { Component } from 'react';\nimport DeckGL, { ArcLayer } from 'deck.gl';\nimport { StaticMap } from 'react-map-gl';\n// import ToolTipTemplate from '../ToolTipTemplate/ToolTipTemplate';\n\nimport './Map.css';\n\n\nexport default class Map extends Component {\n\tmap;\n\tpopup;\n\t// deckgl layers\n\tlayers = [];\n\thoverInfo = {};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t\thoverInfo: {}\n\t\t};\n\t}\n\n\t_viewChange(viewState) {\n\t\tconsole.log(viewState)\n\t}\n\t_renderLayers() {\n\t\tconst layers = [];\n\t\tthis.props.data.forEach(d => {\n\t\t\tlayers.push(\n\t\t\t\tnew ArcLayer({\n\t\t\t\t\tid: d.id,\n\t\t\t\t\tdata: d.data,\n\t\t\t\t\t// Styles\n\t\t\t\t\tautoHighlight: true,\n\t\t\t\t\tgetHeight: 0.5,\n\t\t\t\t\tgetSourcePosition: f => [parseFloat(f.source_lon), parseFloat(f.source_lat)],\n\t\t\t\t\tgetTargetPosition: f => [parseFloat(f.target_lon), parseFloat(f.target_lat)],\n\t\t\t\t\tgetSourceColor: d.color,\n\t\t\t\t\tgetTargetColor: d.color,\n\t\t\t\t\tgetWidth: 4,\n\t\t\t\t\t// interactivity\n\t\t\t\t\tpickable: true,\n\t\t\t\t\tonHover: info => {\n\t\t\t\t\t\tif (info.object) {\n\t\t\t\t\t\t\tthis.setState({ hoverInfo: info });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setState({ hoverInfo: {} })\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t// updates\n\t\t\t\t\tupdateTriggers: {\n\t\t\t\t\t\tdata: [this.props.data]\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\treturn layers;\n\t}\n\n\trenderTooltip(info) {\n\t\tlet fontColor;\n\t\tconst { object, x, y } = info;\n\t\t\n\t\tif (!object) {\n\t\t\treturn null;\n\t\t}\n\n\t\tswitch (object.candidate) {\n\t\t\tcase 'Eby':\n\t\t\t\tfontColor = '#FD4E27';\n\t\t\t\tbreak;\n\t\t\tcase 'Furstenau':\n\t\t\t\tfontColor = '#009A44';\n\t\t\t\tbreak;\n\t\t\tcase 'Rustad':\n\t\t\t\tfontColor = '#08479A';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfontColor = '#d1d2d4';\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='popup' style={{cursor: 'pointer', position: 'absolute', zIndex: 100, pointerEvents: 'none', left: x + 10, top: y}}>\n\t\t\t\t\t<h3>{object.Date}</h3>\n\t\t\t\t\t<p><strong style={{color: fontColor}}>{object.candidate}</strong> travels to {object.city}, in the riding of <strong>{object.riding}</strong>. In 2020, the {object.party_incumbent} won this riding by {object.mov} points.</p>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<DeckGL \n\t\t\t\tcontroller={{touchRotate: true}}\n\t\t\t\t// onViewStateChange={this._viewChange}\n\t\t\t\tinitialViewState={this.props.viewState}\n\t\t\t\tlayers={this._renderLayers()}\n\t\t\t\tpickingRadius={10}>\n\n\t\t\t\t<StaticMap \n\t\t\t\t\tmapboxApiAccessToken={this.props.accessToken}\n\t\t\t\t\tmapStyle={this.props.mapboxStyle}>\n\t\t\t\t</StaticMap>\n\n\t\t\t\t{this.renderTooltip(this.state.hoverInfo)}\n\t\t\t</DeckGL>\n\t\t);\n\t}\n}\n\n\n\n","import { FlyToInterpolator } from 'deck.gl';\nimport React, { Fragment } from 'react';\nimport './MapWrapper.css';\n\nimport Map from '../Map/Map';\n\nconst MapWrapper = (props) => {\n\t\t// set the map view (done when scrolling)\n\t\tconst view = props.articleView;\n\t\tconst viewState = view.viewState;\n\t\tviewState.transitionInterpolator = new FlyToInterpolator();\n\n\t\treturn (\n\t\t\t<Fragment>\n\n\n\t\t\t\t<Map \n\t\t\t\t\taccessToken={props.accessToken}\n\t\t\t\t\tdata={props.data}\n\t\t\t\t\tmapboxStyle={props.mapboxStyle}\n\t\t\t\t\tviewState={viewState}\n\t\t\t\t></Map>\n\t\t\t</Fragment>\n\t\t);\n\n}\nexport default MapWrapper;","import React from 'react';\nimport './ArticleEntry.css';\n\nconst ArticleEntry = (props) => {\n\tlet h2;\n\tconst data = props.data;\n\n\tif (data.h2) {\n\t\th2 = <h2>{data.h2}</h2>;\n\t} else {\n\t\th2 = null;\n\t}\n\n\treturn (\n\t\t<li className='step' data-index={data.id}>\n\t\t\t<div className='card'>\n\t\t\t\t{h2}\n\t\t\t\t<p dangerouslySetInnerHTML={{__html: data.text}} />\n\t\t\t</div>\n\t\t</li>\n\t);\n}\n\nexport default ArticleEntry;","import React from 'react';\nimport ArticleEntry from '../ArticleEntry/ArticleEntry'\n\nconst ArticleList = (props) => {\n\treturn (\n\t\t<ul>\n\t\t\t{props.articleEntries.map((d,i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ArticleEntry data={d} key={d.id} step={props.step}></ArticleEntry>\n\t\t\t\t);\n\t\t\t})}\n\t\t</ul>\n\t);\n}\n\nexport default ArticleList;\n","import React, { Component } from 'react';\nimport 'intersection-observer';\nimport Scrollama from 'scrollama';\nimport ArticleList from '../ArticleList/ArticleList';\n\nimport './ScrollWrapper.css';\n\nexport class ScrollWrapper extends Component {\n\tcomponentDidMount() {\n\t\tconst scroller = Scrollama();\n\n\t\tscroller\n\t\t\t.setup({\n\t\t\t\toffset: 0.66,\n\t\t\t\tstep: '.step'\n\t\t\t})\n\t\t\t.onStepEnter(resp => this.props.updateGraphic(resp, this.props.articleViews))\n\t\t\t.onStepExit(resp => {\n\t\t\t\tthis.togglePointerEvents(resp.index);\n\t\t\t});\n\n\t\t// setup resize event\n\t\twindow.addEventListener('resize', scroller.resize);\n\t}\n\n\ttogglePointerEvents(index) {\n\t\tconst container = document.getElementById('scroller');\n\n\t\t// disable pointer events so we can interact with underlying map\n\t\tif (parseInt(index) === this.props.articleEntries.length - 1) {\n\t\t\tcontainer.classList.add('no-pointer');\n\t\t} else {\n\t\t\tcontainer.classList.remove('no-pointer');\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<article id=\"scroller\">\n\t\t\t\t<ArticleList\n\t\t\t\t\tstep={this.props.stepValue}\n\t\t\t\t\tarticleEntries={this.props.articleEntries}\n\t\t\t\t></ArticleList>\n\t\t\t</article>\n\t\t);\n\t}\n}\n\nexport default ScrollWrapper;","import React from 'react';\nimport './InputSlider.css';\n\nconst InputSlider = (props) => {\n\treturn (\n\t\t<input className=\"input-slider\" type=\"range\" \n\t\t\tstep={1} \n\t\t\tmin={1} \n\t\t\tmax={props.sliderMax}\n\t\t\tvalue={props.value}\n\t\t\tonChange={props.onChange}>\n\t\t</input>\n\t);\n};\n\nexport default InputSlider;","import React from 'react';\nimport './FilterButtons.css';\n\nconst FilterButtons = (props) => {\n\n\treturn (\n\t\t<div className=\"filter-buttons\">\n\t\t\t<button onClick={props.onClick} className=\"btn active\" id=\"all\">All</button>\n\t\t\t<button onClick={props.onClick} className=\"btn\" id=\"furstenau\">Green</button>\n\t\t\t<button onClick={props.onClick} className=\"btn\" id=\"eby\">NDP</button>\n\t\t\t<button onClick={props.onClick} className=\"btn\" id=\"rustad\">Conservative</button>\n\t\t</div>\n\t);\n};\n\nexport default FilterButtons;","import React from 'react';\nimport InputSlider from '../InputSlider/InputSlider';\nimport FilterButtons from '../FilterButtons/FilterButtons';\nimport './OverlayPanel.css';\n\nconst OverlayPanel = (props) => {\n\n\treturn (\n\t\t<div className=\"overlay-panel\">\n\t\t\t<h2 className=\"date\">{formatDate(props.currentDate)}</h2>\n\t\t\t<InputSlider \n\t\t\t\tcurrentDate={props.date}\n\t\t\t\tsliderMax={props.sliderMax} \n\t\t\t\tvalue={props.sliderValue}\n\t\t\t\tonChange={props.onChange}>\n\t\t\t</InputSlider>\n\n\t\t\t<FilterButtons\n\t\t\t\tonClick={props.onClick}\n\t\t\t></FilterButtons>\n\t\t</div>\n\t);\n};\n\nfunction formatDate(dateString) {\n\tconst date = new Date(dateString);\n\t\n\tconst monthNames = [\n\t  \"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"June\",\n\t  \"July\", \"Aug.\", \"Sept.\", \"Oct.\", \"Nov.\", \"Dec.\"\n\t];\n  \n\tconst month = monthNames[date.getMonth()];\n\tconst day = date.getDate();\n  \n\treturn `${month} ${day}`;\n  }\n\nexport default OverlayPanel;","import Papa from 'papaparse';\nimport React, { Component, Fragment } from 'react';\nimport MapWrapper from '../MapWrapper/MapWrapper';\nimport ScrollWrapper from '../ScrollWrapper/ScrollWrapper';\nimport OverlayPanel from '../OverlayPanel/OverlayPanel';\n\n// import './ScrollyMap.css';\n\nexport default class ScrollyMap extends Component {\n\tdates = [];\n\tarticleViews;\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.articleViews = this.props.articleViews;\n\t\tthis.filterButton = this.filterButton.bind(this);\n\t\tthis.updateGraphic = this.updateGraphic.bind(this);\n\t\tthis.updateRouteData = this.updateRouteData.bind(this);\n\t}\n\n\n\tstate = {\n\t\tactiveButton: 'all',\n\t\tallData: [],\n\t\tcurrentDateIndex: 0,\n\t\tcurrentView: this.props.articleViews[0],\n\t\tcurrentData: [],\n\t\tdataReady: false,\n\t\tsliderMax: 0,\n\t\tstepValue: 0,\n\t\ttimestamp: null\n\t};\n\n\tcomponentDidMount() {\n\t\t// download data\n\t\tPapa.parse(this.props.dataUrl, {\n\t\t\tdownload: true,\n\t\t\theader: true,\n\t\t\tcomplete: results => this.handleData(results.data)\n\t\t});\n\t}\n\t\n\tfilterButton(e) {\n\t\tlet data;\n\t\tconst id = e.target ? e.target.id : e;\n\t\tconst currentTimestamp = this.state.timestamp;\n\n\t\tconsole.log(id, currentTimestamp)\n\n\t\t// update the active button class\n\t\tthis.updateButtonClasses(id);\n\n\n\n\t\tif (id !== 'all') {\n\t\t\tconsole.log(this.state)\n\t\t\tconst partyData = this.state.allData.filter(d => d.id === id);\n\t\t\tconsole.log(partyData)\n\t\t\tdata = [{\n\t\t\t\tid: partyData[0].id,\n\t\t\t\tcolor: partyData[0].color,\n\t\t\t\tdata: partyData[0].data.filter(d => d.timestamp <= currentTimestamp)\n\t\t\t}];\n\t\t} else {\n\t\t\tdata = this.state.allData.map(d => {\n\t\t\t\treturn {\n\t\t\t\t\tid: d.id,\n\t\t\t\t\tcolor: d.color,\n\t\t\t\t\tdata: d.data.filter(d => d.timestamp <= currentTimestamp)\n\t\t\t\t};\n\t\t\t})\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcurrentData: data,\n\t\t\tactiveButton: id\n\t\t});\n\t}\n\n\tgetTimestamp(currentDate) {\n\t\treturn new Date(currentDate);\n\t\t// return new Date(`${currentDate.split('.')[1]} ${currentDate.split('.')[0]} 2020`);\n\t}\n\n\thandleData(data) {\n\t\t// sort by date\n\t\tconst sorted = data\n\t\t\t.filter(d => d.source_lat.length > 0)\n\t\t\t.map(d => {\n\t\t\t\td.timestamp = new Date(d.date).getTime()\n\t\t\t\treturn d;\n\t\t\t})\n\t\t\t.sort((a,b) => {\n\t\t\t\treturn new Date(a.date).getTime() - new Date(b.timestamp).getTime();\n\t\t\t});\n\t\t\n\t\t// get list of dates\n\t\tthis.dates = [...new Set(sorted.filter(d => d.target_id !== '').map(d => d.date))];\n\n\t\t// split data into party arrays\n\t\tconst routes = [{\n\t\t\tid: 'furstenau',\n\t\t\tcolor: [0,154,68,255],\n\t\t\tdata: sorted.filter(d => d.candidate === 'Furstenau' && d.target_id !== '')\n\t\t}, {\n\t\t\tid: 'eby',\n\t\t\tcolor: [253,78,39,255],\n\t\t\tdata: sorted.filter(d => d.candidate === 'Eby' && d.target_id !== '')\n\t\t}, {\n\t\t\tid: 'rustad',\n\t\t\tcolor: [8,71,154,255],\n\t\t\tdata: sorted.filter(d => d.candidate === 'Rustad' && d.target_id !== '')\n\t\t}];\n\t\tconsole.log(routes)\n\n\t\t// start on the most recent date\n\t\tconst currentDate = this.dates[this.dates.length];\n\t\t// start at the beginning of the elx campaign\n\t\t// const currentDate = this.dates[1];\n\t\t\n\t\t// we want our mapview to start on the most recent day. This is probably a bit hack-y but...\n\t\tthis.articleViews.forEach(d => d.sliderValue = this.dates.length);\n\t\t\n\n\t\tthis.setState({\n\t\t\tallData: routes,\n\t\t\tcurrentData: routes,\n\t\t\tcurrentDate: currentDate,\n\t\t\t// start on the last day\n\t\t\tcurrentDateIndex: this.dates.length,\n\t\t\t// currentDateIndex: 1,\n\t\t\tdataReady: true,\n\t\t\tsliderMax: this.dates.length,\n\t\t\ttimestamp: this.getTimestamp(currentDate)\n\t\t});\n\t}\n\n\tupdateButtonClasses(id) {\n\t\tconst buttons = document.querySelectorAll('.btn');\n\t\tbuttons.forEach(d => {\n\t\t\td.id === id ? d.className = 'btn active' : d.className = 'btn';\n\t\t});\n\t}\n\n\tupdateGraphic(resp) {\n\t\tconsole.log(resp)\n\t\tconst activeButton = this.articleViews[resp.index].activeButton;\n\n\t\tthis.setState({\n\t\t\tactiveButton: activeButton,\n\t\t\tcurrentView: this.articleViews[resp.index],\n\t\t\tstepValue: resp.index\n\t\t});\n\n\t\tthis.filterButton(activeButton);\n\t\tthis.updateRouteData(this.articleViews[resp.index].sliderValue);\n\t}\n\n\tupdateRouteData(e) {\n\t\tlet data;\n\t\tconst value = e.target ? e.target.valueAsNumber : e;\n\t\tconst currentDate = this.dates[value - 1];\n\t\tconst activeButton = this.state.activeButton;\n\t\tconst currentTimestamp = this.getTimestamp(currentDate);\n\n\t\tif (activeButton === 'all') {\n\t\t\tdata = this.state.allData;\n\t\t} else {\n\t\t\tdata = this.state.allData.filter(d => d.id === activeButton);\n\t\t}\n\n\t\t// filter data by date\n\t\tconst routes = data.map(d => {\n\t\t\treturn {\n\t\t\t\tid: d.id,\n\t\t\t\tcolor: d.color,\n\t\t\t\tdata: d.data.filter(d => d.timestamp <= currentTimestamp)\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\tcurrentDate: currentDate,\n\t\t\tcurrentDateIndex: value,\n\t\t\tcurrentData: routes,\n\t\t\ttimestamp: currentTimestamp\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<OverlayPanel\n\t\t\t\t\tonClick={this.filterButton}\n\t\t\t\t\tcurrentDate={this.state.currentDate}\n\t\t\t\t\tsliderMax={this.state.sliderMax} \n\t\t\t\t\tsliderValue={this.state.currentDateIndex}\n\t\t\t\t\tonChange={this.updateRouteData}\n\t\t\t\t></OverlayPanel>\n\t\t\t\t<div id=\"deckgl-map\">\n\t\t\t\t\t<MapWrapper\n\t\t\t\t\t\taccessToken={this.props.accessToken}\n\t\t\t\t\t\tmapboxStyle={this.props.mapboxStyle}\n\t\t\t\t\t\tarticleView={this.state.currentView}\n\t\t\t\t\t\tcurrentDate={this.state.currentDate}\n\t\t\t\t\t\tcurrentDateIndex={this.state.currentDateIndex}\n\t\t\t\t\t\tallData={this.state.allData}\n\t\t\t\t\t\tdata={this.state.currentData}\n\t\t\t\t\t\tfilterButton={this.filterButton}\n\t\t\t\t\t\tsliderMax={this.state.sliderMax}\n\t\t\t\t\t\tstepValue={this.state.stepValue}\n\t\t\t\t\t\tupdateRouteData={this.updateRouteData}\n\t\t\t\t\t\t>\n\t\t\t\t\t</MapWrapper>\n\t\t\t\t</div>\n\t\t\t\t{ this.state.dataReady &&\n\t\t\t\t\t<ScrollWrapper\n\t\t\t  \t\t\tarticleEntries={this.props.articleEntries}\n\t\t\t  \t\t\tarticleViews={this.props.articleViews}\n\t\t\t  \t\t\tdataReady={this.state.dataReady}\n\t\t\t  \t\t\tstep={this.state.stepValue}\n\t\t\t  \t\t\tupdateGraphic={this.updateGraphic}\n\t\t  \t\t\t></ScrollWrapper>\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n","export default {\n\t\"accessToken\": \"pk.eyJ1IjoibmpncmlmZml0aHMiLCJhIjoiY2o2Z3IwNDkwMGJ2OTJ4cG1rODE5ZzAyayJ9.VUOHF-DfNuiZTr9tRhH-jQ\"\n};\n","import React from 'react';\nimport ScrollyMap from '../ScrollyMap/ScrollyMap';\nimport MapboxConfig from '../../config/mapbox-config';\nimport ArticleEntries from '../../config/article-entries.json';\nimport ArticleViews from '../../config/article-views.js';\n\nimport './App.css';\n\n\n// map tiles & attribution\nconst MapboxStyle = 'mapbox://styles/mapbox/outdoors-v11';\n// data\n// const dataUrl = 'https://vs-postmedia-data.sfo2.digitaloceanspaces.com/elxn/elxn2024/campaign-stops-2024.csv';\nconst dataUrl = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vStaVcZWeQ0TcDzgnwDBYwCgdFurRDwXzEWrbf_6I0v60WBuHbef-TuUh0dxTXiLfygV-74G4jhISaf/pub?gid=1101148911&single=true&output=csv';\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<ScrollyMap\n\t  \t\t\tarticleEntries={ArticleEntries}\n\t  \t\t\tarticleViews={ArticleViews}\n\t  \t\t\tdataUrl={dataUrl}\n\t  \t\t\tmapboxStyle={MapboxStyle}\n\t  \t\t\taccessToken={MapboxConfig.accessToken}\n\t  \t\t></ScrollyMap>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport './css/index.css';\n\n// FONTS\nimport './fonts/Shift-Bold.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/BentonSansCond-Regular.otf';\nimport './fonts/BentonSansCond-RegItalic.otf';\nimport './fonts/BentonSansCond-Bold.otf';\nimport './fonts/BentonSansCond-BoldItalic.otf';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}